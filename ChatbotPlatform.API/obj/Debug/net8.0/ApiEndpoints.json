[
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Auth.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.AuthResponseDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/Auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Auth.RefreshTokenDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.AuthController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/Auth/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.UserDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.AuthController",
    "Method": "RefreshToken",
    "RelativePath": "api/Auth/refresh",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Auth.RefreshTokenDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.AuthResponseDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Auth.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.AuthResponseDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.ChatController",
    "Method": "GetSession",
    "RelativePath": "api/Chat/sessions/{sessionId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sessionId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Chat.ChatSessionDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.ChatController",
    "Method": "AssignSession",
    "RelativePath": "api/Chat/sessions/{sessionId}/assign",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sessionId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.ChatController",
    "Method": "CloseSession",
    "RelativePath": "api/Chat/sessions/{sessionId}/close",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sessionId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.ChatController",
    "Method": "GetActiveSessions",
    "RelativePath": "api/Chat/sessions/active",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.Chat.ChatSessionDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.ChatController",
    "Method": "GetSessionsByEmployee",
    "RelativePath": "api/Chat/sessions/employee",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.Chat.ChatSessionDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.CompanyController",
    "Method": "GetAll",
    "RelativePath": "api/Company",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.Company.CompanyDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.CompanyController",
    "Method": "Create",
    "RelativePath": "api/Company",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Company.CreateCompanyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Company.CompanyDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.CompanyController",
    "Method": "GetById",
    "RelativePath": "api/Company/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Company.CompanyDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.CompanyController",
    "Method": "Update",
    "RelativePath": "api/Company/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Company.UpdateCompanyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Company.CompanyDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.CompanyController",
    "Method": "Delete",
    "RelativePath": "api/Company/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.CompanyController",
    "Method": "GetByStatus",
    "RelativePath": "api/Company/status/{status}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.Company.CompanyDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.CompanyController",
    "Method": "CreateWithAdmin",
    "RelativePath": "api/Company/with-admin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Company.CreateCompanyWithAdminDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Company.CompanyCreationResponseDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.FAQController",
    "Method": "Create",
    "RelativePath": "api/FAQ",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.FAQ.CreateFAQDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.FAQ.FAQDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.FAQController",
    "Method": "GetById",
    "RelativePath": "api/FAQ/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.FAQ.FAQDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.FAQController",
    "Method": "Update",
    "RelativePath": "api/FAQ/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.FAQ.UpdateFAQDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.FAQ.FAQDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.FAQController",
    "Method": "Delete",
    "RelativePath": "api/FAQ/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.FAQController",
    "Method": "GetByCompany",
    "RelativePath": "api/FAQ/company/{companyId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "companyId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.FAQ.FAQDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.FAQController",
    "Method": "Search",
    "RelativePath": "api/FAQ/company/{companyId}/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "companyId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "searchTerm",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.FAQ.FAQDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.FAQController",
    "Method": "GetTopLevel",
    "RelativePath": "api/FAQ/company/{companyId}/top-level",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "companyId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.FAQ.FAQDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.UserController",
    "Method": "GetAll",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.UserDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.UserController",
    "Method": "Create",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Auth.CreateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.UserDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.UserController",
    "Method": "GetById",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.UserDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.UserController",
    "Method": "Update",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Auth.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.UserDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.UserController",
    "Method": "Delete",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.UserController",
    "Method": "UpdateStatus",
    "RelativePath": "api/User/{id}/status",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ChatbotPlatform.API.Models.DTOs.Auth.UpdateUserStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.UserDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.UserController",
    "Method": "GetByCompany",
    "RelativePath": "api/User/company/{companyId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "companyId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.UserDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ChatbotPlatform.API.Controllers.UserController",
    "Method": "GetByRole",
    "RelativePath": "api/User/role/{role}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ChatbotPlatform.API.Models.ApiResponse\u00601[[System.Collections.Generic.List\u00601[[ChatbotPlatform.API.Models.DTOs.Auth.UserDto, ChatbotPlatform.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]